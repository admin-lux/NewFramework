package com.newframework.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.newframework.db.AskStatus;
import com.newframework.db.Connect;
import com.newframework.db.Drugs;
import com.newframework.db.GroupMember;
import com.newframework.db.Groups;
import com.newframework.db.Pat;
import com.newframework.db.PatTags;
import com.newframework.db.UsefulWord;
import com.newframework.db.User;

import com.newframework.db.AskStatusDao;
import com.newframework.db.ConnectDao;
import com.newframework.db.DrugsDao;
import com.newframework.db.GroupMemberDao;
import com.newframework.db.GroupsDao;
import com.newframework.db.PatDao;
import com.newframework.db.PatTagsDao;
import com.newframework.db.UsefulWordDao;
import com.newframework.db.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig askStatusDaoConfig;
    private final DaoConfig connectDaoConfig;
    private final DaoConfig drugsDaoConfig;
    private final DaoConfig groupMemberDaoConfig;
    private final DaoConfig groupsDaoConfig;
    private final DaoConfig patDaoConfig;
    private final DaoConfig patTagsDaoConfig;
    private final DaoConfig usefulWordDaoConfig;
    private final DaoConfig userDaoConfig;

    private final AskStatusDao askStatusDao;
    private final ConnectDao connectDao;
    private final DrugsDao drugsDao;
    private final GroupMemberDao groupMemberDao;
    private final GroupsDao groupsDao;
    private final PatDao patDao;
    private final PatTagsDao patTagsDao;
    private final UsefulWordDao usefulWordDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        askStatusDaoConfig = daoConfigMap.get(AskStatusDao.class).clone();
        askStatusDaoConfig.initIdentityScope(type);

        connectDaoConfig = daoConfigMap.get(ConnectDao.class).clone();
        connectDaoConfig.initIdentityScope(type);

        drugsDaoConfig = daoConfigMap.get(DrugsDao.class).clone();
        drugsDaoConfig.initIdentityScope(type);

        groupMemberDaoConfig = daoConfigMap.get(GroupMemberDao.class).clone();
        groupMemberDaoConfig.initIdentityScope(type);

        groupsDaoConfig = daoConfigMap.get(GroupsDao.class).clone();
        groupsDaoConfig.initIdentityScope(type);

        patDaoConfig = daoConfigMap.get(PatDao.class).clone();
        patDaoConfig.initIdentityScope(type);

        patTagsDaoConfig = daoConfigMap.get(PatTagsDao.class).clone();
        patTagsDaoConfig.initIdentityScope(type);

        usefulWordDaoConfig = daoConfigMap.get(UsefulWordDao.class).clone();
        usefulWordDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        askStatusDao = new AskStatusDao(askStatusDaoConfig, this);
        connectDao = new ConnectDao(connectDaoConfig, this);
        drugsDao = new DrugsDao(drugsDaoConfig, this);
        groupMemberDao = new GroupMemberDao(groupMemberDaoConfig, this);
        groupsDao = new GroupsDao(groupsDaoConfig, this);
        patDao = new PatDao(patDaoConfig, this);
        patTagsDao = new PatTagsDao(patTagsDaoConfig, this);
        usefulWordDao = new UsefulWordDao(usefulWordDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(AskStatus.class, askStatusDao);
        registerDao(Connect.class, connectDao);
        registerDao(Drugs.class, drugsDao);
        registerDao(GroupMember.class, groupMemberDao);
        registerDao(Groups.class, groupsDao);
        registerDao(Pat.class, patDao);
        registerDao(PatTags.class, patTagsDao);
        registerDao(UsefulWord.class, usefulWordDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        askStatusDaoConfig.clearIdentityScope();
        connectDaoConfig.clearIdentityScope();
        drugsDaoConfig.clearIdentityScope();
        groupMemberDaoConfig.clearIdentityScope();
        groupsDaoConfig.clearIdentityScope();
        patDaoConfig.clearIdentityScope();
        patTagsDaoConfig.clearIdentityScope();
        usefulWordDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public AskStatusDao getAskStatusDao() {
        return askStatusDao;
    }

    public ConnectDao getConnectDao() {
        return connectDao;
    }

    public DrugsDao getDrugsDao() {
        return drugsDao;
    }

    public GroupMemberDao getGroupMemberDao() {
        return groupMemberDao;
    }

    public GroupsDao getGroupsDao() {
        return groupsDao;
    }

    public PatDao getPatDao() {
        return patDao;
    }

    public PatTagsDao getPatTagsDao() {
        return patTagsDao;
    }

    public UsefulWordDao getUsefulWordDao() {
        return usefulWordDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
